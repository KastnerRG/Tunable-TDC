

================================================================
== Vivado HLS Report for 'phase'
================================================================
* Date:           Thu Oct  1 23:13:04 2020

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        build
* Solution:       xc7z020clg400-1.phase
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     1.000|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    6|    6|    6|    6|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 8 [1/1] (1.00ns)   --->   "%rincdec_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %rincdec_V)"   --->   Operation 8 'read' 'rincdec_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp = trunc i32 %rincdec_V_read to i1" [main.cpp:11]   --->   Operation 9 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [main.cpp:8]   --->   Operation 10 'wait' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %psen_V, i1 false)" [main.cpp:9]   --->   Operation 11 'write' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [main.cpp:10]   --->   Operation 12 'wait' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 13 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %psincdec_V, i1 %tmp)" [main.cpp:11]   --->   Operation 13 'write' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [main.cpp:12]   --->   Operation 14 'wait' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 15 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %psen_V, i1 false)" [main.cpp:13]   --->   Operation 15 'write' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [main.cpp:14]   --->   Operation 16 'wait' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 17 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %psen_V, i1 true)" [main.cpp:15]   --->   Operation 17 'write' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [main.cpp:16]   --->   Operation 18 'wait' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 19 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %psen_V, i1 false)" [main.cpp:17]   --->   Operation 19 'write' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %rincdec_V), !map !33"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %psincdec_V), !map !39"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %psen_V), !map !43"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %ps_done_V), !map !47"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @phase_str) nounwind"   --->   Operation 24 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [main.cpp:3]   --->   Operation 25 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %rincdec_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [main.cpp:4]   --->   Operation 26 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %psincdec_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [main.cpp:5]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %psen_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [main.cpp:6]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str1) nounwind" [main.cpp:7]   --->   Operation 29 'specprotocol' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [main.cpp:18]   --->   Operation 30 'wait' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 31 [1/1] (0.00ns)   --->   "ret void" [main.cpp:19]   --->   Operation 31 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'rincdec_V' [10]  (1 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
