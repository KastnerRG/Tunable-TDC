-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity present_rounds is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    plain_V : IN STD_LOGIC_VECTOR (63 downto 0);
    key_V : IN STD_LOGIC_VECTOR (79 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of present_rounds is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv80_0 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sbox_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sbox_V_ce0 : STD_LOGIC;
    signal sbox_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce0 : STD_LOGIC;
    signal sbox_pmt_3_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce1 : STD_LOGIC;
    signal sbox_pmt_3_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce2 : STD_LOGIC;
    signal sbox_pmt_3_V_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce3 : STD_LOGIC;
    signal sbox_pmt_3_V_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce4 : STD_LOGIC;
    signal sbox_pmt_3_V_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce5 : STD_LOGIC;
    signal sbox_pmt_3_V_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce6 : STD_LOGIC;
    signal sbox_pmt_3_V_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_address7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_3_V_ce7 : STD_LOGIC;
    signal sbox_pmt_3_V_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce0 : STD_LOGIC;
    signal sbox_pmt_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce1 : STD_LOGIC;
    signal sbox_pmt_2_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce2 : STD_LOGIC;
    signal sbox_pmt_2_V_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce3 : STD_LOGIC;
    signal sbox_pmt_2_V_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce4 : STD_LOGIC;
    signal sbox_pmt_2_V_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce5 : STD_LOGIC;
    signal sbox_pmt_2_V_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce6 : STD_LOGIC;
    signal sbox_pmt_2_V_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_address7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_2_V_ce7 : STD_LOGIC;
    signal sbox_pmt_2_V_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce0 : STD_LOGIC;
    signal sbox_pmt_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce1 : STD_LOGIC;
    signal sbox_pmt_1_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce2 : STD_LOGIC;
    signal sbox_pmt_1_V_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce3 : STD_LOGIC;
    signal sbox_pmt_1_V_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce4 : STD_LOGIC;
    signal sbox_pmt_1_V_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce5 : STD_LOGIC;
    signal sbox_pmt_1_V_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce6 : STD_LOGIC;
    signal sbox_pmt_1_V_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_address7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_1_V_ce7 : STD_LOGIC;
    signal sbox_pmt_1_V_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce0 : STD_LOGIC;
    signal sbox_pmt_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce1 : STD_LOGIC;
    signal sbox_pmt_0_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce2 : STD_LOGIC;
    signal sbox_pmt_0_V_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce3 : STD_LOGIC;
    signal sbox_pmt_0_V_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce4 : STD_LOGIC;
    signal sbox_pmt_0_V_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce5 : STD_LOGIC;
    signal sbox_pmt_0_V_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce6 : STD_LOGIC;
    signal sbox_pmt_0_V_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_address7 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_pmt_0_V_ce7 : STD_LOGIC;
    signal sbox_pmt_0_V_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_204_trunc_reg_2247 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_2252 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_207_trunc_reg_2257 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_210_trunc_reg_2263 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_213_trunc_reg_2268 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_216_trunc_reg_2273 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_219_trunc_reg_2278 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_1578_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_reg_2283 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_s_reg_2288 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_225_trunc_reg_2293 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_2303 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_83_fu_1827_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Result_84_fu_1871_p33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal exitcond_fu_1939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_326_trunc_fu_2035_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_326_trunc_reg_2641 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_2651 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2066_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_81_reg_2656 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_62_reg_2661 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_63_reg_2666 : STD_LOGIC_VECTOR (12 downto 0);
    signal round_counter_V_fu_2090_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal round_counter_V_reg_2671 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_85_fu_2158_p33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Result_86_fu_2235_p7 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Val2_9_reg_835 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_10_reg_844 : STD_LOGIC_VECTOR (79 downto 0);
    signal t_V_reg_853 : STD_LOGIC_VECTOR (5 downto 0);
    signal phitmp_cast_fu_1612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_16_fu_1627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_16_fu_1635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_17_fu_1643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_18_fu_1651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_19_fu_1659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_20_fu_1667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_21_fu_1675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_23_fu_1683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_27_fu_1955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_fu_1963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_45_fu_1971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_62_fu_1979_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_63_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_64_fu_1995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_65_fu_2003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_66_fu_2011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phitmp1_cast_fu_2051_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1124_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1114_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1150_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1140_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1176_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1166_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1202_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1192_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1228_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1218_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1254_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1244_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1280_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1270_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_1316_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_1306_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_1342_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_1332_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_1368_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_1358_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1394_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1384_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_fu_1420_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_fu_1410_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_fu_1446_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_fu_1436_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_13_fu_1472_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_12_fu_1462_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_14_fu_1492_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_1488_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp_fu_1602_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal loc_V_trunc_fu_1326_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_trunc_fu_1352_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_trunc_fu_1378_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_3_trunc_fu_1404_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_4_trunc_fu_1430_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_5_trunc_fu_1456_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_6_trunc_fu_1482_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_7_trunc_fu_1502_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_74_fu_1691_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_75_fu_1702_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_76_fu_1713_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_77_fu_1724_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_78_fu_1735_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_79_fu_1746_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_222_trunc_fu_1757_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_80_fu_1763_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_9_fu_1786_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_864_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_1790_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_81_fu_1775_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_6_fu_1795_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_229_trunc_fu_1815_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_82_fu_1803_p5 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_7_fu_1820_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_874_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_884_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_894_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1839_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_904_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_914_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_924_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_1843_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_934_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_944_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_954_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_1847_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_964_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_974_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_984_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_1851_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_994_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1004_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1014_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_1855_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1024_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1034_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1044_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_fu_1859_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1054_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1064_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1074_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_1863_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1084_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1094_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1104_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_68_fu_1867_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1296_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_fu_1945_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1134_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1160_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1212_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1238_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1264_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1290_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_24_trunc_fu_1949_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_2019_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_fu_2023_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_cast_fu_2031_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp1_fu_2041_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_69_fu_2096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_46_trunc_fu_2100_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_fu_2126_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_fu_2130_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_fu_2134_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_fu_2138_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_fu_2142_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_fu_2146_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_fu_2150_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_78_fu_2154_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_fu_2226_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_2230_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_87_fu_2106_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component present_rounds_sbbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component present_rounds_sbcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component present_rounds_sbdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component present_rounds_sbeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component present_rounds_sbfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sbox_V_U : component present_rounds_sbbkb
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_V_address0,
        ce0 => sbox_V_ce0,
        q0 => sbox_V_q0);

    sbox_pmt_3_V_U : component present_rounds_sbcud
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_pmt_3_V_address0,
        ce0 => sbox_pmt_3_V_ce0,
        q0 => sbox_pmt_3_V_q0,
        address1 => sbox_pmt_3_V_address1,
        ce1 => sbox_pmt_3_V_ce1,
        q1 => sbox_pmt_3_V_q1,
        address2 => sbox_pmt_3_V_address2,
        ce2 => sbox_pmt_3_V_ce2,
        q2 => sbox_pmt_3_V_q2,
        address3 => sbox_pmt_3_V_address3,
        ce3 => sbox_pmt_3_V_ce3,
        q3 => sbox_pmt_3_V_q3,
        address4 => sbox_pmt_3_V_address4,
        ce4 => sbox_pmt_3_V_ce4,
        q4 => sbox_pmt_3_V_q4,
        address5 => sbox_pmt_3_V_address5,
        ce5 => sbox_pmt_3_V_ce5,
        q5 => sbox_pmt_3_V_q5,
        address6 => sbox_pmt_3_V_address6,
        ce6 => sbox_pmt_3_V_ce6,
        q6 => sbox_pmt_3_V_q6,
        address7 => sbox_pmt_3_V_address7,
        ce7 => sbox_pmt_3_V_ce7,
        q7 => sbox_pmt_3_V_q7);

    sbox_pmt_2_V_U : component present_rounds_sbdEe
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_pmt_2_V_address0,
        ce0 => sbox_pmt_2_V_ce0,
        q0 => sbox_pmt_2_V_q0,
        address1 => sbox_pmt_2_V_address1,
        ce1 => sbox_pmt_2_V_ce1,
        q1 => sbox_pmt_2_V_q1,
        address2 => sbox_pmt_2_V_address2,
        ce2 => sbox_pmt_2_V_ce2,
        q2 => sbox_pmt_2_V_q2,
        address3 => sbox_pmt_2_V_address3,
        ce3 => sbox_pmt_2_V_ce3,
        q3 => sbox_pmt_2_V_q3,
        address4 => sbox_pmt_2_V_address4,
        ce4 => sbox_pmt_2_V_ce4,
        q4 => sbox_pmt_2_V_q4,
        address5 => sbox_pmt_2_V_address5,
        ce5 => sbox_pmt_2_V_ce5,
        q5 => sbox_pmt_2_V_q5,
        address6 => sbox_pmt_2_V_address6,
        ce6 => sbox_pmt_2_V_ce6,
        q6 => sbox_pmt_2_V_q6,
        address7 => sbox_pmt_2_V_address7,
        ce7 => sbox_pmt_2_V_ce7,
        q7 => sbox_pmt_2_V_q7);

    sbox_pmt_1_V_U : component present_rounds_sbeOg
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_pmt_1_V_address0,
        ce0 => sbox_pmt_1_V_ce0,
        q0 => sbox_pmt_1_V_q0,
        address1 => sbox_pmt_1_V_address1,
        ce1 => sbox_pmt_1_V_ce1,
        q1 => sbox_pmt_1_V_q1,
        address2 => sbox_pmt_1_V_address2,
        ce2 => sbox_pmt_1_V_ce2,
        q2 => sbox_pmt_1_V_q2,
        address3 => sbox_pmt_1_V_address3,
        ce3 => sbox_pmt_1_V_ce3,
        q3 => sbox_pmt_1_V_q3,
        address4 => sbox_pmt_1_V_address4,
        ce4 => sbox_pmt_1_V_ce4,
        q4 => sbox_pmt_1_V_q4,
        address5 => sbox_pmt_1_V_address5,
        ce5 => sbox_pmt_1_V_ce5,
        q5 => sbox_pmt_1_V_q5,
        address6 => sbox_pmt_1_V_address6,
        ce6 => sbox_pmt_1_V_ce6,
        q6 => sbox_pmt_1_V_q6,
        address7 => sbox_pmt_1_V_address7,
        ce7 => sbox_pmt_1_V_ce7,
        q7 => sbox_pmt_1_V_q7);

    sbox_pmt_0_V_U : component present_rounds_sbfYi
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_pmt_0_V_address0,
        ce0 => sbox_pmt_0_V_ce0,
        q0 => sbox_pmt_0_V_q0,
        address1 => sbox_pmt_0_V_address1,
        ce1 => sbox_pmt_0_V_ce1,
        q1 => sbox_pmt_0_V_q1,
        address2 => sbox_pmt_0_V_address2,
        ce2 => sbox_pmt_0_V_ce2,
        q2 => sbox_pmt_0_V_q2,
        address3 => sbox_pmt_0_V_address3,
        ce3 => sbox_pmt_0_V_ce3,
        q3 => sbox_pmt_0_V_q3,
        address4 => sbox_pmt_0_V_address4,
        ce4 => sbox_pmt_0_V_ce4,
        q4 => sbox_pmt_0_V_q4,
        address5 => sbox_pmt_0_V_address5,
        ce5 => sbox_pmt_0_V_ce5,
        q5 => sbox_pmt_0_V_q5,
        address6 => sbox_pmt_0_V_address6,
        ce6 => sbox_pmt_0_V_ce6,
        q6 => sbox_pmt_0_V_q6,
        address7 => sbox_pmt_0_V_address7,
        ce7 => sbox_pmt_0_V_ce7,
        q7 => sbox_pmt_0_V_q7);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if (((exitcond_fu_1939_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_return_preg <= p_Result_87_fu_2106_p9;
                end if; 
            end if;
        end if;
    end process;


    p_Val2_10_reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_10_reg_844 <= p_Result_86_fu_2235_p7;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_10_reg_844 <= p_Result_83_fu_1827_p5;
            end if; 
        end if;
    end process;

    p_Val2_9_reg_835_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_9_reg_835 <= p_Result_85_fu_2158_p33;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_9_reg_835 <= p_Result_84_fu_1871_p33;
            end if; 
        end if;
    end process;

    t_V_reg_853_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_reg_853 <= round_counter_V_reg_2671;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                t_V_reg_853 <= ap_const_lv6_2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                r_V_204_trunc_reg_2247 <= key_V(34 downto 27);
                r_V_207_trunc_reg_2257 <= key_V(42 downto 35);
                r_V_210_trunc_reg_2263 <= key_V(50 downto 43);
                r_V_213_trunc_reg_2268 <= key_V(58 downto 51);
                r_V_216_trunc_reg_2273 <= key_V(66 downto 59);
                r_V_219_trunc_reg_2278 <= key_V(74 downto 67);
                r_V_225_trunc_reg_2293 <= key_V(10 downto 3);
                r_V_s_reg_2288 <= key_V(79 downto 75);
                tmp_2_reg_2303 <= key_V(14 downto 11);
                tmp_3_reg_2283 <= tmp_3_fu_1578_p1;
                tmp_reg_2252 <= key_V(34 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_1939_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                r_V_326_trunc_reg_2641 <= r_V_326_trunc_fu_2035_p2;
                round_counter_V_reg_2671 <= round_counter_V_fu_2090_p2;
                tmp_62_reg_2661 <= p_Val2_10_reg_844(79 downto 40);
                tmp_63_reg_2666 <= p_Val2_10_reg_844(31 downto 19);
                tmp_81_reg_2656 <= tmp_81_fu_2066_p1;
                tmp_8_reg_2651 <= p_Val2_10_reg_844(14 downto 11);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, exitcond_fu_1939_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((exitcond_fu_1939_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, exitcond_fu_1939_p2)
    begin
        if ((((exitcond_fu_1939_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, exitcond_fu_1939_p2)
    begin
        if (((exitcond_fu_1939_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state3, exitcond_fu_1939_p2, p_Result_87_fu_2106_p9, ap_return_preg)
    begin
        if (((exitcond_fu_1939_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_return <= p_Result_87_fu_2106_p9;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    exitcond_fu_1939_p2 <= "1" when (t_V_reg_853 = ap_const_lv6_20) else "0";
    grp_fu_1004_p4 <= sbox_pmt_0_V_q4(5 downto 4);
    grp_fu_1014_p4 <= sbox_pmt_3_V_q4(3 downto 2);
    grp_fu_1024_p4 <= sbox_pmt_1_V_q5(7 downto 6);
    grp_fu_1034_p4 <= sbox_pmt_0_V_q5(5 downto 4);
    grp_fu_1044_p4 <= sbox_pmt_3_V_q5(3 downto 2);
    grp_fu_1054_p4 <= sbox_pmt_2_V_q6(7 downto 6);
    grp_fu_1064_p4 <= sbox_pmt_1_V_q6(5 downto 4);
    grp_fu_1074_p4 <= sbox_pmt_0_V_q6(3 downto 2);
    grp_fu_1084_p4 <= sbox_pmt_2_V_q7(7 downto 6);
    grp_fu_1094_p4 <= sbox_pmt_1_V_q7(5 downto 4);
    grp_fu_1104_p4 <= sbox_pmt_0_V_q7(3 downto 2);
    grp_fu_1114_p4 <= p_Val2_9_reg_835(63 downto 56);
    grp_fu_1124_p4 <= p_Val2_10_reg_844(79 downto 72);
    grp_fu_1134_p2 <= (grp_fu_1124_p4 xor grp_fu_1114_p4);
    grp_fu_1140_p4 <= p_Val2_9_reg_835(55 downto 48);
    grp_fu_1150_p4 <= p_Val2_10_reg_844(71 downto 64);
    grp_fu_1160_p2 <= (grp_fu_1150_p4 xor grp_fu_1140_p4);
    grp_fu_1166_p4 <= p_Val2_9_reg_835(47 downto 40);
    grp_fu_1176_p4 <= p_Val2_10_reg_844(63 downto 56);
    grp_fu_1186_p2 <= (grp_fu_1176_p4 xor grp_fu_1166_p4);
    grp_fu_1192_p4 <= p_Val2_9_reg_835(39 downto 32);
    grp_fu_1202_p4 <= p_Val2_10_reg_844(55 downto 48);
    grp_fu_1212_p2 <= (grp_fu_1202_p4 xor grp_fu_1192_p4);
    grp_fu_1218_p4 <= p_Val2_9_reg_835(31 downto 24);
    grp_fu_1228_p4 <= p_Val2_10_reg_844(47 downto 40);
    grp_fu_1238_p2 <= (grp_fu_1228_p4 xor grp_fu_1218_p4);
    grp_fu_1244_p4 <= p_Val2_9_reg_835(23 downto 16);
    grp_fu_1254_p4 <= p_Val2_10_reg_844(39 downto 32);
    grp_fu_1264_p2 <= (grp_fu_1254_p4 xor grp_fu_1244_p4);
    grp_fu_1270_p4 <= p_Val2_9_reg_835(15 downto 8);
    grp_fu_1280_p4 <= p_Val2_10_reg_844(31 downto 24);
    grp_fu_1290_p2 <= (grp_fu_1280_p4 xor grp_fu_1270_p4);
    grp_fu_1296_p4 <= p_Val2_10_reg_844(23 downto 16);
    grp_fu_864_p4 <= sbox_V_q0(7 downto 4);
    grp_fu_874_p4 <= sbox_pmt_3_V_q0(7 downto 6);
    grp_fu_884_p4 <= sbox_pmt_2_V_q0(5 downto 4);
    grp_fu_894_p4 <= sbox_pmt_1_V_q0(3 downto 2);
    grp_fu_904_p4 <= sbox_pmt_3_V_q1(7 downto 6);
    grp_fu_914_p4 <= sbox_pmt_2_V_q1(5 downto 4);
    grp_fu_924_p4 <= sbox_pmt_1_V_q1(3 downto 2);
    grp_fu_934_p4 <= sbox_pmt_0_V_q2(7 downto 6);
    grp_fu_944_p4 <= sbox_pmt_3_V_q2(5 downto 4);
    grp_fu_954_p4 <= sbox_pmt_2_V_q2(3 downto 2);
    grp_fu_964_p4 <= sbox_pmt_0_V_q3(7 downto 6);
    grp_fu_974_p4 <= sbox_pmt_3_V_q3(5 downto 4);
    grp_fu_984_p4 <= sbox_pmt_2_V_q3(3 downto 2);
    grp_fu_994_p4 <= sbox_pmt_1_V_q4(7 downto 6);
    loc_V_1_trunc_fu_1352_p2 <= (p_Result_3_fu_1342_p4 xor p_Result_2_fu_1332_p4);
    loc_V_24_trunc_fu_1949_p2 <= (tmp_70_fu_1945_p1 xor grp_fu_1296_p4);
    loc_V_2_trunc_fu_1378_p2 <= (p_Result_5_fu_1368_p4 xor p_Result_4_fu_1358_p4);
    loc_V_3_trunc_fu_1404_p2 <= (p_Result_7_fu_1394_p4 xor p_Result_6_fu_1384_p4);
    loc_V_46_trunc_fu_2100_p2 <= (tmp_69_fu_2096_p1 xor grp_fu_1296_p4);
    loc_V_4_trunc_fu_1430_p2 <= (p_Result_9_fu_1420_p4 xor p_Result_8_fu_1410_p4);
    loc_V_5_trunc_fu_1456_p2 <= (p_Result_11_fu_1446_p4 xor p_Result_10_fu_1436_p4);
    loc_V_6_trunc_fu_1482_p2 <= (p_Result_13_fu_1472_p4 xor p_Result_12_fu_1462_p4);
    loc_V_7_trunc_fu_1502_p2 <= (tmp_1_fu_1488_p1 xor p_Result_14_fu_1492_p4);
    loc_V_trunc_fu_1326_p2 <= (p_Result_s_fu_1306_p4 xor p_Result_1_fu_1316_p4);
    p_Result_10_fu_1436_p4 <= plain_V(23 downto 16);
    p_Result_11_fu_1446_p4 <= key_V(39 downto 32);
    p_Result_12_fu_1462_p4 <= plain_V(15 downto 8);
    p_Result_13_fu_1472_p4 <= key_V(31 downto 24);
    p_Result_14_fu_1492_p4 <= key_V(23 downto 16);
    p_Result_16_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_1_trunc_fu_1352_p2),64));
    p_Result_17_fu_1643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_2_trunc_fu_1378_p2),64));
    p_Result_18_fu_1651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_3_trunc_fu_1404_p2),64));
    p_Result_19_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_4_trunc_fu_1430_p2),64));
    p_Result_1_fu_1316_p4 <= key_V(79 downto 72);
    p_Result_20_fu_1667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_5_trunc_fu_1456_p2),64));
    p_Result_21_fu_1675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_6_trunc_fu_1482_p2),64));
    p_Result_23_fu_1683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_7_trunc_fu_1502_p2),64));
    p_Result_27_fu_1955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1134_p2),64));
    p_Result_28_fu_1963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1160_p2),64));
    p_Result_2_fu_1332_p4 <= plain_V(55 downto 48);
    p_Result_3_fu_1342_p4 <= key_V(71 downto 64);
    p_Result_45_fu_1971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1186_p2),64));
    p_Result_4_fu_1358_p4 <= plain_V(47 downto 40);
    p_Result_5_fu_1368_p4 <= key_V(63 downto 56);
    p_Result_62_fu_1979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1212_p2),64));
    p_Result_63_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1238_p2),64));
    p_Result_64_fu_1995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1264_p2),64));
    p_Result_65_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1290_p2),64));
    p_Result_66_fu_2011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_24_trunc_fu_1949_p2),64));
    p_Result_6_fu_1384_p4 <= plain_V(39 downto 32);
    p_Result_74_fu_1691_p5 <= (ap_const_lv80_0(79 downto 16) & tmp_reg_2252);
    p_Result_75_fu_1702_p5 <= (p_Result_74_fu_1691_p5(79 downto 24) & r_V_207_trunc_reg_2257 & p_Result_74_fu_1691_p5(15 downto 0));
    p_Result_76_fu_1713_p5 <= (p_Result_75_fu_1702_p5(79 downto 32) & r_V_210_trunc_reg_2263 & p_Result_75_fu_1702_p5(23 downto 0));
    p_Result_77_fu_1724_p5 <= (p_Result_76_fu_1713_p5(79 downto 40) & r_V_213_trunc_reg_2268 & p_Result_76_fu_1713_p5(31 downto 0));
    p_Result_78_fu_1735_p5 <= (p_Result_77_fu_1724_p5(79 downto 48) & r_V_216_trunc_reg_2273 & p_Result_77_fu_1724_p5(39 downto 0));
    p_Result_79_fu_1746_p5 <= (p_Result_78_fu_1735_p5(79 downto 56) & r_V_219_trunc_reg_2278 & p_Result_78_fu_1735_p5(47 downto 0));
    p_Result_7_fu_1394_p4 <= key_V(55 downto 48);
    p_Result_80_fu_1763_p5 <= (p_Result_79_fu_1746_p5(79 downto 64) & r_V_222_trunc_fu_1757_p3 & p_Result_79_fu_1746_p5(55 downto 0));
    p_Result_81_fu_1775_p5 <= (p_Result_80_fu_1763_p5(79 downto 72) & r_V_225_trunc_reg_2293 & p_Result_80_fu_1763_p5(63 downto 0));
    p_Result_82_fu_1803_p5 <= (tmp_6_fu_1795_p3 & p_Result_81_fu_1775_p5(71 downto 0));
    p_Result_83_fu_1827_p5 <= (p_Result_82_fu_1803_p5(79 downto 24) & tmp_7_fu_1820_p3 & p_Result_82_fu_1803_p5(7 downto 0));
    p_Result_84_fu_1871_p33 <= (((((((((((((((((((((((((((((((grp_fu_874_p4 & grp_fu_884_p4) & grp_fu_894_p4) & tmp_14_fu_1839_p1) & grp_fu_904_p4) & grp_fu_914_p4) & grp_fu_924_p4) & tmp_60_fu_1843_p1) & grp_fu_934_p4) & grp_fu_944_p4) & grp_fu_954_p4) & tmp_61_fu_1847_p1) & grp_fu_964_p4) & grp_fu_974_p4) & grp_fu_984_p4) & tmp_64_fu_1851_p1) & grp_fu_994_p4) & grp_fu_1004_p4) & grp_fu_1014_p4) & tmp_65_fu_1855_p1) & grp_fu_1024_p4) & grp_fu_1034_p4) & grp_fu_1044_p4) & tmp_66_fu_1859_p1) & grp_fu_1054_p4) & grp_fu_1064_p4) & grp_fu_1074_p4) & tmp_67_fu_1863_p1) & grp_fu_1084_p4) & grp_fu_1094_p4) & grp_fu_1104_p4) & tmp_68_fu_1867_p1);
    p_Result_85_fu_2158_p33 <= (((((((((((((((((((((((((((((((grp_fu_874_p4 & grp_fu_884_p4) & grp_fu_894_p4) & tmp_71_fu_2126_p1) & grp_fu_904_p4) & grp_fu_914_p4) & grp_fu_924_p4) & tmp_72_fu_2130_p1) & grp_fu_934_p4) & grp_fu_944_p4) & grp_fu_954_p4) & tmp_73_fu_2134_p1) & grp_fu_964_p4) & grp_fu_974_p4) & grp_fu_984_p4) & tmp_74_fu_2138_p1) & grp_fu_994_p4) & grp_fu_1004_p4) & grp_fu_1014_p4) & tmp_75_fu_2142_p1) & grp_fu_1024_p4) & grp_fu_1034_p4) & grp_fu_1044_p4) & tmp_76_fu_2146_p1) & grp_fu_1054_p4) & grp_fu_1064_p4) & grp_fu_1074_p4) & tmp_77_fu_2150_p1) & grp_fu_1084_p4) & grp_fu_1094_p4) & grp_fu_1104_p4) & tmp_78_fu_2154_p1);
    p_Result_86_fu_2235_p7 <= (((((grp_fu_864_p4 & tmp_s_fu_2230_p2) & tmp_81_reg_2656) & tmp_62_reg_2661) & r_V_326_trunc_reg_2641) & tmp_63_reg_2666);
    p_Result_87_fu_2106_p9 <= (((((((grp_fu_1134_p2 & grp_fu_1160_p2) & grp_fu_1186_p2) & grp_fu_1212_p2) & grp_fu_1238_p2) & grp_fu_1264_p2) & grp_fu_1290_p2) & loc_V_46_trunc_fu_2100_p2);
    p_Result_8_fu_1410_p4 <= plain_V(31 downto 24);
    p_Result_9_fu_1420_p4 <= key_V(47 downto 40);
    p_Result_s_16_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_trunc_fu_1326_p2),64));
    p_Result_s_fu_1306_p4 <= plain_V(63 downto 56);
    phitmp1_cast_fu_2051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phitmp1_fu_2041_p4),64));
    phitmp1_fu_2041_p4 <= p_Val2_10_reg_844(18 downto 15);
    phitmp_cast_fu_1612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phitmp_fu_1602_p4),64));
    phitmp_fu_1602_p4 <= key_V(18 downto 15);
    r_V_222_trunc_fu_1757_p3 <= (tmp_3_reg_2283 & r_V_s_reg_2288);
    r_V_229_trunc_fu_1815_p2 <= (r_V_204_trunc_reg_2247 xor ap_const_lv8_80);
    r_V_326_trunc_fu_2035_p2 <= (r_V_cast_fu_2031_p1 xor grp_fu_1254_p4);
    r_V_cast_fu_2031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_2023_p3),8));
    r_V_fu_2023_p3 <= (tmp_79_fu_2019_p1 & ap_const_lv2_0);
    round_counter_V_fu_2090_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(t_V_reg_853));

    sbox_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, phitmp_cast_fu_1612_p1, phitmp1_cast_fu_2051_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_V_address0 <= phitmp1_cast_fu_2051_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_V_address0 <= phitmp_cast_fu_1612_p1(4 - 1 downto 0);
        else 
            sbox_V_address0 <= "XXXX";
        end if; 
    end process;


    sbox_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_V_ce0 <= ap_const_logic_1;
        else 
            sbox_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_18_fu_1651_p1, p_Result_62_fu_1979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address0 <= p_Result_62_fu_1979_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address0 <= p_Result_18_fu_1651_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_23_fu_1683_p1, p_Result_66_fu_2011_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address1 <= p_Result_66_fu_2011_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address1 <= p_Result_23_fu_1683_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address2_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_s_16_fu_1627_p1, p_Result_27_fu_1955_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address2 <= p_Result_27_fu_1955_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address2 <= p_Result_s_16_fu_1627_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address2 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address3_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_19_fu_1659_p1, p_Result_63_fu_1987_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address3 <= p_Result_63_fu_1987_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address3 <= p_Result_19_fu_1659_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address3 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address4_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_16_fu_1635_p1, p_Result_28_fu_1963_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address4 <= p_Result_28_fu_1963_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address4 <= p_Result_16_fu_1635_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address4 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address5_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_20_fu_1667_p1, p_Result_64_fu_1995_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address5 <= p_Result_64_fu_1995_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address5 <= p_Result_20_fu_1667_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address5 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address6_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_17_fu_1643_p1, p_Result_45_fu_1971_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address6 <= p_Result_45_fu_1971_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address6 <= p_Result_17_fu_1643_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address6 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_address7_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_21_fu_1675_p1, p_Result_65_fu_2003_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_0_V_address7 <= p_Result_65_fu_2003_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_0_V_address7 <= p_Result_21_fu_1675_p1(8 - 1 downto 0);
        else 
            sbox_pmt_0_V_address7 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_0_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce0 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce1 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce2_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce2 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce3_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce3 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce4_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce4 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce5_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce5 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce6_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce6 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_0_V_ce7_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_0_V_ce7 <= ap_const_logic_1;
        else 
            sbox_pmt_0_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_17_fu_1643_p1, p_Result_45_fu_1971_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address0 <= p_Result_45_fu_1971_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address0 <= p_Result_17_fu_1643_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_21_fu_1675_p1, p_Result_65_fu_2003_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address1 <= p_Result_65_fu_2003_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address1 <= p_Result_21_fu_1675_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address2_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_18_fu_1651_p1, p_Result_62_fu_1979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address2 <= p_Result_62_fu_1979_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address2 <= p_Result_18_fu_1651_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address2 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address3_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_23_fu_1683_p1, p_Result_66_fu_2011_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address3 <= p_Result_66_fu_2011_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address3 <= p_Result_23_fu_1683_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address3 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address4_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_s_16_fu_1627_p1, p_Result_27_fu_1955_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address4 <= p_Result_27_fu_1955_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address4 <= p_Result_s_16_fu_1627_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address4 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address5_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_19_fu_1659_p1, p_Result_63_fu_1987_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address5 <= p_Result_63_fu_1987_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address5 <= p_Result_19_fu_1659_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address5 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address6_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_16_fu_1635_p1, p_Result_28_fu_1963_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address6 <= p_Result_28_fu_1963_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address6 <= p_Result_16_fu_1635_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address6 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_address7_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_20_fu_1667_p1, p_Result_64_fu_1995_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_1_V_address7 <= p_Result_64_fu_1995_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_1_V_address7 <= p_Result_20_fu_1667_p1(8 - 1 downto 0);
        else 
            sbox_pmt_1_V_address7 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_1_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce0 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce1 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce2_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce2 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce3_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce3 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce4_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce4 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce5_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce5 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce6_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce6 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_1_V_ce7_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_1_V_ce7 <= ap_const_logic_1;
        else 
            sbox_pmt_1_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_16_fu_1635_p1, p_Result_28_fu_1963_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address0 <= p_Result_28_fu_1963_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address0 <= p_Result_16_fu_1635_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_20_fu_1667_p1, p_Result_64_fu_1995_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address1 <= p_Result_64_fu_1995_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address1 <= p_Result_20_fu_1667_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address2_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_17_fu_1643_p1, p_Result_45_fu_1971_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address2 <= p_Result_45_fu_1971_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address2 <= p_Result_17_fu_1643_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address2 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address3_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_21_fu_1675_p1, p_Result_65_fu_2003_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address3 <= p_Result_65_fu_2003_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address3 <= p_Result_21_fu_1675_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address3 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address4_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_18_fu_1651_p1, p_Result_62_fu_1979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address4 <= p_Result_62_fu_1979_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address4 <= p_Result_18_fu_1651_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address4 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address5_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_23_fu_1683_p1, p_Result_66_fu_2011_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address5 <= p_Result_66_fu_2011_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address5 <= p_Result_23_fu_1683_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address5 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address6_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_s_16_fu_1627_p1, p_Result_27_fu_1955_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address6 <= p_Result_27_fu_1955_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address6 <= p_Result_s_16_fu_1627_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address6 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_address7_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_19_fu_1659_p1, p_Result_63_fu_1987_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_2_V_address7 <= p_Result_63_fu_1987_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_2_V_address7 <= p_Result_19_fu_1659_p1(8 - 1 downto 0);
        else 
            sbox_pmt_2_V_address7 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_2_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce0 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce1 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce2_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce2 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce3_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce3 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce4_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce4 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce5_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce5 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce6_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce6 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_2_V_ce7_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_2_V_ce7 <= ap_const_logic_1;
        else 
            sbox_pmt_2_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_s_16_fu_1627_p1, p_Result_27_fu_1955_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address0 <= p_Result_27_fu_1955_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address0 <= p_Result_s_16_fu_1627_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_19_fu_1659_p1, p_Result_63_fu_1987_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address1 <= p_Result_63_fu_1987_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address1 <= p_Result_19_fu_1659_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address2_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_16_fu_1635_p1, p_Result_28_fu_1963_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address2 <= p_Result_28_fu_1963_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address2 <= p_Result_16_fu_1635_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address2 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address3_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_20_fu_1667_p1, p_Result_64_fu_1995_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address3 <= p_Result_64_fu_1995_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address3 <= p_Result_20_fu_1667_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address3 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address4_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_17_fu_1643_p1, p_Result_45_fu_1971_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address4 <= p_Result_45_fu_1971_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address4 <= p_Result_17_fu_1643_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address4 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address5_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_21_fu_1675_p1, p_Result_65_fu_2003_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address5 <= p_Result_65_fu_2003_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address5 <= p_Result_21_fu_1675_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address5 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address6_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_18_fu_1651_p1, p_Result_62_fu_1979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address6 <= p_Result_62_fu_1979_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address6 <= p_Result_18_fu_1651_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address6 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_address7_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Result_23_fu_1683_p1, p_Result_66_fu_2011_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sbox_pmt_3_V_address7 <= p_Result_66_fu_2011_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            sbox_pmt_3_V_address7 <= p_Result_23_fu_1683_p1(8 - 1 downto 0);
        else 
            sbox_pmt_3_V_address7 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_pmt_3_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce0 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce1 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce2_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce2 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce3_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce3 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce4_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce4 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce5_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce5 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce6_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce6 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_pmt_3_V_ce7_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            sbox_pmt_3_V_ce7 <= ap_const_logic_1;
        else 
            sbox_pmt_3_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_14_fu_1839_p1 <= sbox_pmt_0_V_q0(2 - 1 downto 0);
    tmp_1_fu_1488_p1 <= plain_V(8 - 1 downto 0);
    tmp_3_fu_1578_p1 <= key_V(3 - 1 downto 0);
    tmp_4_fu_1790_p2 <= (tmp_9_fu_1786_p1 or tmp_2_reg_2303);
    tmp_60_fu_1843_p1 <= sbox_pmt_0_V_q1(2 - 1 downto 0);
    tmp_61_fu_1847_p1 <= sbox_pmt_1_V_q2(2 - 1 downto 0);
    tmp_64_fu_1851_p1 <= sbox_pmt_1_V_q3(2 - 1 downto 0);
    tmp_65_fu_1855_p1 <= sbox_pmt_2_V_q4(2 - 1 downto 0);
    tmp_66_fu_1859_p1 <= sbox_pmt_2_V_q5(2 - 1 downto 0);
    tmp_67_fu_1863_p1 <= sbox_pmt_3_V_q6(2 - 1 downto 0);
    tmp_68_fu_1867_p1 <= sbox_pmt_3_V_q7(2 - 1 downto 0);
    tmp_69_fu_2096_p1 <= p_Val2_9_reg_835(8 - 1 downto 0);
    tmp_6_fu_1795_p3 <= (grp_fu_864_p4 & tmp_4_fu_1790_p2);
    tmp_70_fu_1945_p1 <= p_Val2_9_reg_835(8 - 1 downto 0);
    tmp_71_fu_2126_p1 <= sbox_pmt_0_V_q0(2 - 1 downto 0);
    tmp_72_fu_2130_p1 <= sbox_pmt_0_V_q1(2 - 1 downto 0);
    tmp_73_fu_2134_p1 <= sbox_pmt_1_V_q2(2 - 1 downto 0);
    tmp_74_fu_2138_p1 <= sbox_pmt_1_V_q3(2 - 1 downto 0);
    tmp_75_fu_2142_p1 <= sbox_pmt_2_V_q4(2 - 1 downto 0);
    tmp_76_fu_2146_p1 <= sbox_pmt_2_V_q5(2 - 1 downto 0);
    tmp_77_fu_2150_p1 <= sbox_pmt_3_V_q6(2 - 1 downto 0);
    tmp_78_fu_2154_p1 <= sbox_pmt_3_V_q7(2 - 1 downto 0);
    tmp_79_fu_2019_p1 <= t_V_reg_853(5 - 1 downto 0);
    tmp_7_fu_1820_p3 <= (r_V_207_trunc_reg_2257 & r_V_229_trunc_fu_1815_p2);
    tmp_80_fu_2226_p1 <= sbox_V_q0(4 - 1 downto 0);
    tmp_81_fu_2066_p1 <= p_Val2_10_reg_844(11 - 1 downto 0);
    tmp_9_fu_1786_p1 <= sbox_V_q0(4 - 1 downto 0);
    tmp_s_fu_2230_p2 <= (tmp_8_reg_2651 or tmp_80_fu_2226_p1);
end behav;
